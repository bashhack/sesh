#+TITLE: Sesh Development Roadmap
#+AUTHOR: Marc Alvarez
#+DATE: [2025-04-19]

* Project Vision
Transform ~sesh~ from an AWS-specific MFA tool into a comprehensive, privacy-focused MFA management solution that works across terminal and web interfaces while keeping all secrets local.

** Open Source Philosophy
Sesh is open source with a plugin architecture designed for community contributions. Core functionality focuses on the maintainer's use cases (AWS, generic TOTP). Additional providers (GitHub, GCP, NPM, etc.) are welcome as community contributions. See docs/PLUGIN_DEVELOPMENT.md for guidance on adding new providers.

* Core Principles
- Privacy: All secrets remain local to the user's machine
- Security: Strong encryption and access controls via OS keychain
- Simplicity: Intuitive CLI interface with minimal setup
- Terminal-first: Designed for developer workflows

* Feature Roadmap

** Phase 1: Core Extension Framework [2/2]
*** DONE Multi-Service Plugin Architecture
**** Design plugin interface for multiple service providers
**** Create registration system for plugins
**** Implement service provider abstraction layer
**** Add ~--service~ flag for selecting providers

*** DONE Clipboard Integration [macOS only]
**** Add ~sesh clip~ command to copy TOTP to clipboard
**** Implement platform-specific clipboard handling (macOS/Linux/Windows)
**** Add optional notification for clipboard operations
**** Create configuration for auto-copying behavior


** Phase 2: Service Providers [2/2]
*** DONE AWS Provider (Existing)
**** Refactor current code as AWS plugin
**** Add AWS-specific configuration options
**** Maintain current functionality

*** DONE Generic TOTP Provider
**** Create configurable provider for arbitrary services
**** Support defining custom service names and configurations
**** Allow tagging and organizing services

** Phase 3: Terminal UI Enhancement [0/1]
*** TODO Interactive Terminal UI Mode
**** Create TUI for discovering and managing entries
**** Visual selection for passwords/TOTP entries  
**** Search-as-you-type functionality
**** Better UX for master password entry
**** Complement (not replace) existing CLI

** Phase 4: Advanced Features [0/2]
*** TODO Backup and Restore
**** Create secure export/import functionality
**** Support encrypted backup files
**** Document disaster recovery process


*** TODO Audit Logging
**** Track usage of TOTP codes
**** Log authentication attempts
**** Provide reports on service usage


* Technical Tasks

** Core Infrastructure [2/2]
*** DONE Refactor existing code into plugins
*** DONE Create plugin loading system

** Security Enhancements [3/3]
*** DONE Audit keychain usage
*** DONE Implement strict permission checks
*** DONE Add TOTP seed validation

** Testing [4/4]
*** DONE Create automated tests for plugins
*** DONE Implement CI pipeline
*** DONE Add security testing [gosec via make security-scan]
*** DONE Create integration tests with actual services [AWS implemented]

** Documentation [3/3]
*** DONE Update README with new capabilities
*** DONE Create plugin development guide
*** DONE Improve security documentation
